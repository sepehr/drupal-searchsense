<?php
// $Id$

/**
 * @file
 * Implementation of necessary hooks and helpers for Dynamic Searchsense.
 *
 * @todo
 * Make it configurable from UI to choose which searchsense providers to remove from.
 */

/**
 * Implements hook_menu().
 */
function dynosense_menu() {
  $items = array();
  $types = node_get_types('names');

  foreach ($types as $name => $nick) {
    $items[SEARCHSENSE_PATH . '/' . $name] =
    $items[SEARCHSENSE_JS_PATH . '/' . $name] = array(
      'title' => "Searchsense filtered by $name",
      'page callback' => 'searchsense_autocomplete',
      'access arguments' => array('use search autocompletion'),
      'type' => MENU_CALLBACK,
    );
  }

  return $items;
}

/**
 * Implements hook_form_alter() for search block form.
 */
function dynosense_form_search_block_form_alter(&$form, $form_state) {
  drupal_add_js(drupal_get_path('module', 'dynosense') . '/dynosense.js');
}

/**
 * Implements hook_searchsense_alter().
 *
 * Removes unrelevant entries from nodesense provider results.
 */
function dynosense_searchsense_alter(&$matches, $a1 = '', $a2 = '') {
  if (!empty($a2)) {
    $matches['nodesense'] = is_array($matches['nodesense'][$a2]) ? $matches['nodesense'][$a2] : array();
  }
}

